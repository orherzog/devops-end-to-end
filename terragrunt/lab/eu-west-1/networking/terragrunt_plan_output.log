[0m[1mmodule.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]: Reading...[0m[0m
[0m[1mmodule.vpc.data.aws_caller_identity.current[0]: Reading...[0m[0m
[0m[1mmodule.vpc.data.aws_region.current[0]: Reading...[0m[0m
[0m[1mdata.aws_availability_zones.available: Reading...[0m[0m
[0m[1mmodule.vpc.data.aws_region.current[0]: Read complete after 0s [id=eu-west-1][0m
[0m[1mmodule.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]: Read complete after 0s [id=1021377347][0m
[0m[1mmodule.vpc.data.aws_caller_identity.current[0]: Read complete after 0s [id=581349712378][0m
[0m[1mdata.aws_availability_zones.available: Read complete after 1s [id=eu-west-1][0m
[0m[1mmodule.vpc-endpoints[0].data.aws_vpc_endpoint_service.this["ecr-dkr"]: Reading...[0m[0m
[0m[1mmodule.vpc-endpoints[0].data.aws_vpc_endpoint_service.this["ecr-api"]: Reading...[0m[0m
[0m[1mmodule.vpc-endpoints[0].data.aws_vpc_endpoint_service.this["logs"]: Reading...[0m[0m
[0m[1mmodule.vpc-endpoints[0].data.aws_vpc_endpoint_service.this["aps-workspaces"]: Reading...[0m[0m
[0m[1mmodule.vpc-endpoints[0].data.aws_vpc_endpoint_service.this["s3"]: Reading...[0m[0m
[0m[1mmodule.vpc-endpoints[0].data.aws_vpc_endpoint_service.this["ecr-dkr"]: Read complete after 0s [id=1308289045][0m
[0m[1mmodule.vpc-endpoints[0].data.aws_vpc_endpoint_service.this["logs"]: Read complete after 1s [id=534093961][0m
[0m[1mmodule.vpc-endpoints[0].data.aws_vpc_endpoint_service.this["ecr-api"]: Read complete after 1s [id=1751263368][0m
[0m[1mmodule.vpc-endpoints[0].data.aws_vpc_endpoint_service.this["s3"]: Read complete after 1s [id=3917145344][0m
[0m[1mmodule.vpc-endpoints[0].data.aws_vpc_endpoint_service.this["aps-workspaces"]: Read complete after 1s [id=1600971942][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # aws_ec2_managed_prefix_list.client_subnets[0m will be created
[0m  [32m+[0m[0m resource "aws_ec2_managed_prefix_list" "client_subnets" {
      [32m+[0m[0m address_family = "IPv4"
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m max_entries    = 5
      [32m+[0m[0m name           = "All client CIDR-s"
      [32m+[0m[0m owner_id       = (known after apply)
      [32m+[0m[0m tags_all       = {
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m version        = (known after apply)

      [32m+[0m[0m entry {
          [32m+[0m[0m cidr        = "0.0.0.0/0"
          [32m+[0m[0m description = "Primary"
        }
      [32m+[0m[0m entry {
          [32m+[0m[0m cidr        = "10.110.0.0/16"
          [32m+[0m[0m description = "Primary"
        }
      [32m+[0m[0m entry {
          [32m+[0m[0m cidr        = "10.111.0.0/16"
          [32m+[0m[0m description = "Secondary"
        }
    }

[1m  # module.sg-vpc-endpoint[0].aws_security_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Security group for VPC endpoints"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "sgr-leumit-test-vpc-endpoints"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"           = "sgr-leumit-test-vpc-endpoints"
          [32m+[0m[0m "module_version" = "v0.0.0"
          [32m+[0m[0m "service"        = "networking"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"             = "sgr-leumit-test-vpc-endpoints"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "module_version"   = "v0.0.0"
          [32m+[0m[0m "requested-by"     = "orh"
          [32m+[0m[0m "service"          = "networking"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "10m"
          [32m+[0m[0m delete = "15m"
        }
    }

[1m  # module.sg-vpc-endpoint[0].aws_security_group_rule.egress_rules[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "egress_rules" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "All protocols"
      [32m+[0m[0m from_port                = -1
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m ipv6_cidr_blocks         = []
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = -1
      [32m+[0m[0m type                     = "egress"
    }

[1m  # module.sg-vpc-endpoint[0].aws_security_group_rule.ingress_rules[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_rules" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "172.20.0.0/16",
        ]
      [32m+[0m[0m description              = "All protocols"
      [32m+[0m[0m from_port                = -1
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m ipv6_cidr_blocks         = []
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = -1
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "vpc_flow_log_cloudwatch" {
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m json          = (known after apply)
      [32m+[0m[0m minified_json = (known after apply)

      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "logs:CreateLogStream",
              [32m+[0m[0m "logs:DescribeLogGroups",
              [32m+[0m[0m "logs:DescribeLogStreams",
              [32m+[0m[0m "logs:PutLogEvents",
            ]
          [32m+[0m[0m effect    = "Allow"
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
            ]
          [32m+[0m[0m sid       = "AWSVPCFlowLogsPushToCloudWatch"
        }
    }

[1m  # module.vpc.aws_cloudwatch_log_group.flow_log[0][0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "flow_log" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = (known after apply)
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 0
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags_all          = {
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
    }

[1m  # module.vpc.aws_db_subnet_group.database[0][0m will be created
[0m  [32m+[0m[0m resource "aws_db_subnet_group" "database" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m description             = "Database subnet group for leumit-test"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "leumit-test"
      [32m+[0m[0m name_prefix             = (known after apply)
      [32m+[0m[0m subnet_ids              = (known after apply)
      [32m+[0m[0m supported_network_types = (known after apply)
      [32m+[0m[0m tags                    = {
          [32m+[0m[0m "Name" = "leumit-test"
        }
      [32m+[0m[0m tags_all                = {
          [32m+[0m[0m "Name"             = "leumit-test"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m vpc_id                  = (known after apply)
    }

[1m  # module.vpc.aws_default_network_acl.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_network_acl" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_network_acl_id = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "leumit-test-default"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"             = "leumit-test-default"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m egress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m ipv6_cidr_block = "::/0"
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 101
          [32m+[0m[0m to_port         = 0
        }
      [32m+[0m[0m egress {
          [32m+[0m[0m action     = "allow"
          [32m+[0m[0m cidr_block = "0.0.0.0/0"
          [32m+[0m[0m from_port  = 0
          [32m+[0m[0m protocol   = "-1"
          [32m+[0m[0m rule_no    = 100
          [32m+[0m[0m to_port    = 0
        }

      [32m+[0m[0m ingress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m ipv6_cidr_block = "::/0"
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 101
          [32m+[0m[0m to_port         = 0
        }
      [32m+[0m[0m ingress {
          [32m+[0m[0m action     = "allow"
          [32m+[0m[0m cidr_block = "0.0.0.0/0"
          [32m+[0m[0m from_port  = 0
          [32m+[0m[0m protocol   = "-1"
          [32m+[0m[0m rule_no    = 100
          [32m+[0m[0m to_port    = 0
        }
    }

[1m  # module.vpc.aws_default_route_table.default[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_route_table" "default" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_route_table_id = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m route                  = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "leumit-test-default"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"             = "leumit-test-default"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "5m"
          [32m+[0m[0m update = "5m"
        }
    }

[1m  # module.vpc.aws_default_security_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_security_group" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = (known after apply)
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "leumit-test-default"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"             = "leumit-test-default"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.vpc.aws_flow_log.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_flow_log" "this" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m iam_role_arn             = (known after apply)
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m log_destination          = (known after apply)
      [32m+[0m[0m log_destination_type     = "cloud-watch-logs"
      [32m+[0m[0m log_format               = (known after apply)
      [32m+[0m[0m log_group_name           = (known after apply)
      [32m+[0m[0m max_aggregation_interval = 60
      [32m+[0m[0m tags_all                 = {
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m traffic_type             = "ALL"
      [32m+[0m[0m vpc_id                   = (known after apply)
    }

[1m  # module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy" "vpc_flow_log_cloudwatch" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m attachment_count = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = (known after apply)
      [32m+[0m[0m name_prefix      = "vpc-flow-log-to-cloudwatch-"
      [32m+[0m[0m path             = "/"
      [32m+[0m[0m policy           = (known after apply)
      [32m+[0m[0m policy_id        = (known after apply)
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
    }

[1m  # module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "vpc_flow_log_cloudwatch" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "vpc-flow-logs.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = "AWSVPCFlowLogsAssumeRole"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "vpc-flow-log-role-leumit-test"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "vpc_flow_log_cloudwatch" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = (known after apply)
      [32m+[0m[0m role       = "vpc-flow-log-role-leumit-test"
    }

[1m  # module.vpc.aws_route_table.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "leumit-test-private-eu-west-1a"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name"             = "leumit-test-private-eu-west-1a"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "leumit-test-private-eu-west-1b"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name"             = "leumit-test-private-eu-west-1b"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "leumit-test-private-eu-west-1c"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name"             = "leumit-test-private-eu-west-1c"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.database[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "database" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.database[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "database" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.database[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "database" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_subnet.database[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "database" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "172.20.48.0/20"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "leumit-test-db-eu-west-1a"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"             = "leumit-test-db-eu-west-1a"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.database[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "database" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "172.20.64.0/20"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "leumit-test-db-eu-west-1b"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"             = "leumit-test-db-eu-west-1b"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.database[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "database" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "172.20.80.0/20"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "leumit-test-db-eu-west-1c"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"             = "leumit-test-db-eu-west-1c"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "172.20.0.0/20"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "leumit-test-private-eu-west-1a"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"             = "leumit-test-private-eu-west-1a"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "172.20.16.0/20"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "leumit-test-private-eu-west-1b"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"             = "leumit-test-private-eu-west-1b"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "172.20.32.0/20"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "leumit-test-private-eu-west-1c"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"             = "leumit-test-private-eu-west-1c"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_vpc.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "this" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "172.20.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "leumit-test"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name"             = "leumit-test"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "requested-by"     = "orh"
        }
    }

[1m  # module.vpc-endpoints[0].aws_vpc_endpoint.this["aps-workspaces"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "this" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-1.aps-workspaces"
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"           = "vpce-interface-leumit-test-aps-workspaces"
          [32m+[0m[0m "module_version" = "v0.0.0"
          [32m+[0m[0m "service"        = "networking"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"             = "vpce-interface-leumit-test-aps-workspaces"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "module_version"   = "v0.0.0"
          [32m+[0m[0m "requested-by"     = "orh"
          [32m+[0m[0m "service"          = "networking"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "10m"
          [32m+[0m[0m delete = "10m"
          [32m+[0m[0m update = "10m"
        }
    }

[1m  # module.vpc-endpoints[0].aws_vpc_endpoint.this["ecr-api"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "this" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-1.ecr.api"
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"           = "vpce-interface-leumit-test-ecr-api"
          [32m+[0m[0m "module_version" = "v0.0.0"
          [32m+[0m[0m "service"        = "networking"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"             = "vpce-interface-leumit-test-ecr-api"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "module_version"   = "v0.0.0"
          [32m+[0m[0m "requested-by"     = "orh"
          [32m+[0m[0m "service"          = "networking"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "10m"
          [32m+[0m[0m delete = "10m"
          [32m+[0m[0m update = "10m"
        }
    }

[1m  # module.vpc-endpoints[0].aws_vpc_endpoint.this["ecr-dkr"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "this" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-1.ecr.dkr"
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"           = "vpce-interface-leumit-test-ecr-dkr"
          [32m+[0m[0m "module_version" = "v0.0.0"
          [32m+[0m[0m "service"        = "networking"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"             = "vpce-interface-leumit-test-ecr-dkr"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "module_version"   = "v0.0.0"
          [32m+[0m[0m "requested-by"     = "orh"
          [32m+[0m[0m "service"          = "networking"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "10m"
          [32m+[0m[0m delete = "10m"
          [32m+[0m[0m update = "10m"
        }
    }

[1m  # module.vpc-endpoints[0].aws_vpc_endpoint.this["logs"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "this" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-1.logs"
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"           = "vpce-interface-leumit-test-logs"
          [32m+[0m[0m "module_version" = "v0.0.0"
          [32m+[0m[0m "service"        = "networking"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"             = "vpce-interface-leumit-test-logs"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "module_version"   = "v0.0.0"
          [32m+[0m[0m "requested-by"     = "orh"
          [32m+[0m[0m "service"          = "networking"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "10m"
          [32m+[0m[0m delete = "10m"
          [32m+[0m[0m update = "10m"
        }
    }

[1m  # module.vpc-endpoints[0].aws_vpc_endpoint.this["s3"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "this" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = (known after apply)
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-1.s3"
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"           = "vpce-gateway-leumit-test-s3"
          [32m+[0m[0m "module_version" = "v0.0.0"
          [32m+[0m[0m "service"        = "networking"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"             = "vpce-gateway-leumit-test-s3"
          [32m+[0m[0m "backup-policy"    = "policy-name"
          [32m+[0m[0m "created-by"       = "terraform"
          [32m+[0m[0m "environment-name" = "leumit-test"
          [32m+[0m[0m "environment-type" = "lab"
          [32m+[0m[0m "module_version"   = "v0.0.0"
          [32m+[0m[0m "requested-by"     = "orh"
          [32m+[0m[0m "service"          = "networking"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Gateway"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "10m"
          [32m+[0m[0m delete = "10m"
          [32m+[0m[0m update = "10m"
        }
    }

[1mPlan:[0m 34 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m client_prefix_list           = (known after apply)
  [32m+[0m[0m database_subnet_arns         = [
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m database_subnets             = [
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m database_subnets_cidr_blocks = [
      [32m+[0m[0m "172.20.48.0/20",
      [32m+[0m[0m "172.20.64.0/20",
      [32m+[0m[0m "172.20.80.0/20",
    ]
  [32m+[0m[0m private_subnet_arns          = [
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m private_subnets              = [
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m private_subnets_cidr_blocks  = [
      [32m+[0m[0m "172.20.0.0/20",
      [32m+[0m[0m "172.20.16.0/20",
      [32m+[0m[0m "172.20.32.0/20",
    ]
  [32m+[0m[0m public_subnet_arns           = []
  [32m+[0m[0m public_subnets               = []
  [32m+[0m[0m public_subnets_cidr_blocks   = []
  [32m+[0m[0m vpc_arn                      = (known after apply)
  [32m+[0m[0m vpc_cidr_block               = "172.20.0.0/16"
  [32m+[0m[0m vpc_id                       = (known after apply)
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
